name: frontend

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    paths:
      - 'frontend/**/*'

env:
  DISABLE_ESLINT_PLUGIN: true

jobs:
  install-dependencies:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
      - name: Cache node_modules
        uses: actions/cache@main
        id: cache-node
        env:
          cache-name: cache-node
        with:
          path: |
            node_modules
            frontend/node_modules
            node-server/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        # Always run this, so it throws if the package and lockfile don't match
        run: npm ci

  build:
    runs-on: ubuntu-latest
    needs: install-dependencies
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
      - name: Restore dependencies
        uses: actions/cache@main
        env:
          cache-name: cache-node
        with:
          path: |
            node_modules
            frontend/node_modules
            node-server/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - run: cd frontend && npm run build
      - run: cd frontend && npm run analyze
      - uses: actions/upload-artifact@v4
        with:
          name: analyze
          path: ./frontend/report.html

  test:
    runs-on: ubuntu-latest
    needs: install-dependencies
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
      - name: Restore dependencies
        uses: actions/cache@main
        env:
          cache-name: cache-node
        with:
          path: |
            node_modules
            frontend/node_modules
            node-server/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - run: cd frontend && npm run jest

  eslint:
    runs-on: ubuntu-latest
    needs: install-dependencies
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
      - name: Restore dependencies
        uses: actions/cache@main
        env:
          cache-name: cache-node
        with:
          path: |
            node_modules
            frontend/node_modules
            node-server/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - run: cd frontend && npm run eslint:check

  prettier:
    runs-on: ubuntu-latest
    needs: install-dependencies
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
      - name: Restore dependencies
        uses: actions/cache@main
        env:
          cache-name: cache-node
        with:
          path: |
            node_modules
            frontend/node_modules
            node-server/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - run: cd frontend && npm run prettier:check

  # audit:
  #   runs-on: ubuntu-latest
  #   needs: install-dependencies
  #   if: github.ref == 'refs/heads/main'
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Use Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '18.x'
  #     - name: Restore dependencies
  #       uses: actions/cache@main
  #       env:
  #         cache-name: cache-node
  #       with:
  #         path: node_modules
  #         key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
  #     - run: npm audit --omit dev
